services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: modern-pos-postgres
    environment:
      POSTGRES_DB: modern_pos
      POSTGRES_USER: pos_user
      POSTGRES_PASSWORD: pos_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - pos-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: modern-pos-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pos-network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: modern-pos-backend
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://pos_user:pos_password@postgres:5432/modern_pos?schema=public
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - PORT=5000
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - pos-network
    restart: unless-stopped
    command: >
      sh -c "
        npx prisma migrate deploy &&
        npx prisma db seed &&
        npm start
      "

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: modern-pos-frontend
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
      - REACT_APP_APP_NAME=Modern POS
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - pos-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  pos-network:
    driver: bridge
